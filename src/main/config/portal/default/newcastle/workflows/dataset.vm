#set($oid = $self.getFormData("oid"))
#set($title = $self.getFormData("title"))
#set($pageTitle = $title)
<div class="grid_16" id="inputForms">
    <p class="loading-data">Loading form data, please wait...</p>
</div>
<script type="text/javascript" src="$portalPath/js/autocomplete/lib/jquery.ajaxQueue.js"></script>
<script type="text/javascript" src="$portalPath/js/autocomplete/lib/jquery.bgiframe.min.js"></script>
<script type="text/javascript" src="$portalPath/js/autocomplete/jquery.autocomplete.pack.js"></script>
<script type="text/javascript" src="$portalPath/js/jquery.jqEasyCharCounter.min.js"></script>
<script type="text/javascript" src="$portalPath/javascript-widgets/widgets2.js"></script>
<script type="text/javascript" src="$portalPath/javascript-widgets/nameLookup.js"></script>
<script type="text/javascript">
var UON_NS = "urn:uon:internal";
var widgetTabs;
var packageData = {
    metaData: $self.getJsonMetadata(),
    attachedFiles: $self.getAttachedFiles(),
    nextStageMessage: "$self.getNextStepAcceptMessage()"
};

(function($){
    $(function(){
        function onContentLoaded(){
            if (packageData.metaData.submitted!="true"){ $(".request").remove(); }
            widgetTabs = widgets.changeToTabLayout($(".inputscreens"));
            widgetTabs.tabs({
                select: function(event, ui){
                    if(widgets.forms[0].hasChanges()){
                        $(".form-fields-save:first").click();
                    }
                }
            });
            widgets.contentLoaded(function(){
                try{
                    widgets.formsById["main-form"].addListener("postOnRestore",
                        function(ctx){
                            nameLookup.init();
                            // people
                            ctx.findx(".lookup-show").each(function(){
                                var e=$(this);
                                e.find("a.nameLookup-lookup").text(e.find("input.nl").val()?" | change":"lookup");
                                e.find(".identified-as-name").text(e.find("input.nl").val());
                            });
                            // grant numbers
                            $(".internal-grant:checked").each(function() {
                                var baseId = $(this).attr("id").replace(".uon:internal", "");
                                $("input[id="+baseId+".dc:identifier]").unautocomplete();
                                $("input[id="+baseId+".skos:prefLabel]").removeAttr("readonly").removeClass("label");
                            });
                            // geonames
                            $(".autocomplete-geonames").each(function() {
                                var baseId = $(this).attr("id");
                                var uri = $("input[id="+baseId+".dc:identifier]").val().trim();
                                $(this).unautocomplete();
                                if(uri){
                                    var mapElem = $(this).parent().parent().find(".geonames-map-link");
                                    mapElem.attr("href", uri).show();
                                }
                            });
                        }
                    );
                    widgets.formsById["main-form"].restore(packageData.metaData);
                }catch(e){
                    alert(e);
                }
            });
        }
        $("#inputForms").load("$portalPath/workflows/forms/dataset.ajax",
                {   oid: "$oid",
                    portalPath: "$portalPath",
                    stage: "$self.getCurrentStep()",
                    stageLabel: "$self.getCurrentStepLabel()",
                    nextStageMessage: "$self.getNextStepAcceptMessage()"
                },
                onContentLoaded);
    });
})(jQuery);
</script>
