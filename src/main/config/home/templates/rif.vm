#macro(showElementRifCS $tag $field $attr $label $anzsrc)
    #set($valueMap = $util.getList($item, $field))
    #foreach($key in $valueMap.keySet())
        #set($value = $valueMap.get($key))
        #if ($label != "")
            #set($labelVal = $value.get($label))
            #if ($anzsrc == "anzsrc")
                #set($lastIndex = $labelVal.lastIndexOf('/') + 1 )
                #set($labelVal = $labelVal.substring($lastIndex) )
            #end
    <$tag$attr>$util.encodeXml($labelVal)</$tag>
        #else
    <$tag$attr>$util.encodeXml($value.get($key))</$tag>
        #end
    #end
#end

#macro(showRelatedInfo $field $relatedInfoType $identifierType)
    #set($valueMap = $util.getList($item, $field))
    #foreach($key in $valueMap.keySet())
        #set($value = $valueMap.get($key).get($key))
        #if ("$!value" != "")
        <relatedInfo type="$relatedInfoType"><identifier type="$identifierType">$util.encodeXml($value)</identifier></relatedInfo>
        #end
    #end
#end

#macro(outputRelatedObject $data $relatedObjectType)
    #if ("$!data" != "")
        <relatedObject>
            <key>$util.encodeXml($data)</key>
            <relation type="$relatedObjectType"/>
        </relatedObject>
    #end
#end

#macro(findRelatedObject $field $relatedObjectType)
    #set($value = $util.get($item, $field))
    #if ("$!value" != "")
        <relatedObject>
            <key>$util.encodeXml($value)</key>
            <relation type="$relatedObjectType"/>
        </relatedObject>
    #end
#end

#macro(findRelatedIdentifiers $field $relatedObjectType)
    #set($valueMap = $util.getList($item, $field))
    #foreach($key in $valueMap.keySet())
        #set($value = $valueMap.get($key).get("dc:identifier"))
        #if ("$!value" != "")
        <relatedObject>
            <key>$util.encodeXml($value)</key>
            <relation type="$relatedObjectType"/>
        </relatedObject>
        #end
    #end
#end

#macro(geoSpatial $field)
    #set($valueMap = $util.getList($item, $field))
    #foreach($key in $valueMap.keySet())
        <coverage>
        #set($geoMap = $valueMap.get($key))
        #set($type = $geoMap.get("type"))
        #set($name = $geoMap.get("dcmi:name"))
            <spatial type="$type" $lang>$util.encodeXml($name)</spatial>
        #if($type == "text")
            #set($east = $geoMap.get("dcmi:east"))
            #set($north = $geoMap.get("dcmi:north"))
            #if ("$!east" != "" &&"$!north" != "")
            <spatial type="dcmiPoint" $lang>name=$util.encodeXml($name); east=$east; north=$north</spatial>
            #end
        #end
        </coverage>
    #end
#end

#set($quote='"')
#set($dateFormat = "yyyy-MM-dd'T'HH:mm:ss")
#set ($handle = $util.getMetadata($object, "vitalHandle"))
####set($lang = "xml:lang=${quote}$util.get($item, 'dc:language')${quote}")
#set($lang = "xml:lang=${quote}en${quote}")
<registryObjects xmlns="http://ands.org.au/standards/rif-cs/registryObjects"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://ands.org.au/standards/rif-cs/registryObjects http://services.ands.org.au/home/orca/schemata/1.2.0/registryObjects.xsd">
    <registryObject group="University of Newcastle, Australia">

    ## Use handle if exists
    #if ($handle != "")
        <key>$handle</key>
    #else
        <key>$urlBase/detail/$oid</key>
    #end

        <originatingSource>$urlBase</originatingSource>

        #set($dateModified = "")
        #if ($util.get($item, 'dc:modified') != "")
            #set($rawModified = "$util.getDateTime($util.get($item, 'dc:modified'), $dateFormat)Z")
            #set($dateModified = "dateModified=${quote}${rawModified}${quote}")
        #end

        #set($dateAccessioned = "")
        #if ($util.get($item, "dc:created") != "")
            #set($rawAccessioned = "$util.getDateTime($util.get($item, 'dc:created'), $dateFormat)Z")
            #set($dateAccessioned = "dateAccessioned=${quote}${rawAccessioned}${quote}")
        #end

        #################
        ## The order of child codes under <collection> is important, don't
        ## change the order or the XML will not validate:
        ##  1) <identifier>
        ##  2) <name>
        ##  3) <location>
        ##  4) <coverage>
        ##  5) <relatedObject>
        ##  6) <subject>
        ##  7) <description>
        ##  8) <relatedInfo>
        ##  9) <citationInfo>
        ##
        ##  http://services.ands.org.au/documentation/rifcs/1.2.0/schemadocs/registryObjects.html
        #################
        <collection type="$util.get($item, "dc:type")" $dateModified $dateAccessioned>

        #set ($value = $util.get($item, "url_useRecordId"))
        #if ($value == "on" && $handle != "")
            <identifier type="url">$handle</identifier>
        #else
            <identifier type="url">$util.get($item, "url")</identifier>
        #end

            <name type="primary" $lang>
                <namePart>$util.encodeXml($util.get($item, "dc:title"))</namePart>
            </name>

        ## Location, use Handle as priority if requested
            <location>
                <address>
                    <electronic type="url">
        #set ($value = $util.get($item, "url_useRecordId"))
        #if ($value == "on" && $handle != "")
                        <value>$handle</value>
        #else
                        <value>$util.get($item, "url")</value>
        #end
                    </electronic>
                </address>
        #set ($value = $util.get($item, "physical_storage"))
        #if ("$!value" != "")
                <address>
                    <physical>
                        <addressPart type="text">$util.encodeXml($value)</addressPart>
                    </physical>
                </address>
        #end
            </location>

        #set ($covFrom = $util.get($item, "dc:coverage.from"))
        #set ($covTo = $util.get($item, "dc:coverage.to"))
        #set ($covPeriod = $util.get($item, "time_period"))
        #if ("$!covFrom" != "" || "$!covTo" != "" || "$!covPeriod" != "")
            <coverage>
                #if ("$!covFrom" != "" || "$!covTo" != "")
                <temporal>
                    #if ("$!covFrom" != "")
                    <date type="dateFrom" dateFormat="W3CDTF">$util.getDateTime($covFrom, $dateFormat)Z</date>
                    #end
                    #if ("$!covTo" != "")
                    <date type="dateTo" dateFormat="W3CDTF">$util.getDateTime($covTo, $dateFormat)Z</date>
                    #end
                </temporal>
                #end

                #if ("$!covPeriod" != "")
                <temporal>
                    <text>$util.encodeXml($covPeriod)</text>
                </temporal>
                #end
            </coverage>
        #end

            ###geoSpatial("location")

            #findRelatedIdentifiers("dc:creator.foaf:Person", "hasCollector")
            #findRelatedObject("primaryContact.dc:identifier", "isPrimaryContactFor")
            #findRelatedObject("affiliation", "isManagedBy")

            #showElementRifCS("subject" "dc:subject.keywords", " type=${quote}local${quote} $lang", "", "")
            #showElementRifCS("subject" "dc:subject.anzsrc:for", " type=${quote}anzsrc-for${quote} $lang", "rdf:resource", "anzsrc")
            #showElementRifCS("subject" "dc:subject.anzsrc:seo", " type=${quote}anzsrc-seo${quote} $lang", "rdf:resource", "anzsrc")

        #set ($value = $util.get($item, "research_activity"))
        #if ("$!value" != "")
            <subject type="anzsrc-toa">$util.encodeXml($value)</subject>
        #end

        #set ($value = $util.get($item, "dc:description"))
        #if ("$!value" != "")
            <description type="full" $lang>$util.encodeXml($value)</description>
        #end

        #set ($value = $util.get($item, "access_conditions"))
        #if ("$!value" != "")
            <description type="accessRights" $lang>$util.encodeXml($value)</description>
        #end

        #set ($value = $util.get($item, "restrictions"))
        #if ("$!value" != "")
            <description type="rights" $lang>$util.encodeXml($value)</description>
        #end

        #set ($value = $util.get($item, "license_cc.skos:prefLabel"))
        #if ("$!value" != "")
            <description type="rights" $lang>$util.encodeXml($value)</description>
        #end

        #set ($value = $util.get($item, "license_other_name"))
        #if ("$!value" != "")
            <description type="rights" $lang>$util.encodeXml($value)</description>
        #end

            #showRelatedInfo("citations", "publication", "url")
            #showRelatedInfo("website", "website", "url")
        </collection>
    </registryObject>
</registryObjects>